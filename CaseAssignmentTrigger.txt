trigger CaseAssignmentTrigger on Case (before insert, before update) {
    // Retrieve active case routings
    List<Case_Routing__c> activeRoutings = [SELECT Id, Category__c, User__c FROM Case_Routing__c WHERE isActive__c = true];
    
    // Initialize a map to track the assignment counts for each user
    Map<Id, Integer> userAssignmentCounts = new Map<Id, Integer>();
    
    // Initialize a map to track the last assigned user for each category
    Map<String, Id> lastAssignedUser = new Map<String, Id>();

    for (Case_Routing__c routing : activeRoutings) {
        userAssignmentCounts.put(routing.User__c, 0);
    }

    // Loop through new cases
    for (Case c : Trigger.new) {
        if (c.Category__c != null) {
            // Check if the last assigned user for the category is available in the active routings
            if (lastAssignedUser.containsKey(c.Category__c) && userAssignmentCounts.containsKey(lastAssignedUser.get(c.Category__c))) {
                // Increment the assignment count for the last assigned user
                Integer assignmentCount = userAssignmentCounts.get(lastAssignedUser.get(c.Category__c)) + 1;
                userAssignmentCounts.put(lastAssignedUser.get(c.Category__c), assignmentCount);
                
                // If the last assigned user has not completed a full rotation, assign the case to the same user
                if (assignmentCount < activeRoutings.size()) {
                    c.OwnerId = lastAssignedUser.get(c.Category__c);
                    continue;
                }
            }

            // If all users have been assigned, reset the rotation
            for (Id userId : userAssignmentCounts.keySet()) {
                userAssignmentCounts.put(userId, 0);
            }

            // Assign the case to the next available user in rotation
            for (Case_Routing__c routing : activeRoutings) {
                if (routing.Category__c == c.Category__c && userAssignmentCounts.get(routing.User__c) == 0) {
                    c.OwnerId = routing.User__c;
                    lastAssignedUser.put(c.Category__c, routing.User__c);
                    userAssignmentCounts.put(routing.User__c, 1);
                    break;
                }
            }
        }
    }
}
